{"version":3,"sources":["services/database.service.js","cmps/AppHeader.jsx","services/utils.js","cmps/AppFilter.jsx","cmps/character-cmps/CharacterPreview.jsx","cmps/character-cmps/CharacterList.jsx","cmps/Modal.jsx","assets/img/puff.svg","cmps/Loader.jsx","routes.js","cmps/AppBoard.jsx","pages/ChartList.jsx","App.jsx","index.js"],"names":["PAGES_COUNT","AppHeader","toggleView","view","useContext","Context","className","to","FormControl","style","width","InputLabel","color","id","Select","MenuProps","getContentAnchorEl","anchorOrigin","vertical","horizontal","labelId","name","value","variant","label","onChange","ev","MenuItem","BASE_URL","require","firstUrl","lastUrl","a","promise1","axios","get","promise2","Promise","all","episodes","map","data","episode","console","log","page","info","pages","results","databaseService","query","getPageCount","fetchEpisodes","utilService","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","AppFilter","onSetFilter","filterBy","clearFilter","useState","setName","debouncedSetFilter","useCallback","useEffect","target","TextField","backgroundColor","borderRadius","fullWidth","gender","status","IconButton","onClick","padding","fontSize","textTransform","component","CharacterPreview","character","onSelectedCharcter","onToggleModal","origin","species","image","getSelectedCharcter","useMemo","first","last","length","src","alt","CharacterList","memo","characters","position","top","left","transform","bgcolor","boxShadow","BasicModal","selectedCharcter","setEpisodes","getEpisodes","Modal","open","onClose","Box","sx","Loader","LoaderImg","routes","path","setCharcters","setSelectedCharcter","setPage","setFilterBy","charactersToDisaply","charsToShow","regex","RegExp","filter","test","loadCharacters","prevFilter","Pagination","count","event","textAlign","createContext","App","setView","Provider","route","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7c38c1f.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst gDatabase = require('../data/data.json');\r\nconst BASE_URL = 'https://rickandmortyapi.com/api/character?page=';\r\n\r\nlet PAGES_COUNT;\r\n\r\n\r\n\r\nfunction getPageCount() {\r\n    return PAGES_COUNT\r\n}\r\n\r\nasync function fetchEpisodes(firstUrl, lastUrl) {\r\n    try {\r\n        const promise1 = axios.get(firstUrl)\r\n        const promise2 = axios.get(lastUrl)\r\n        const episodes = await Promise.all([promise1, promise2])\r\n        return episodes.map(({ data }) => data.episode)\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nasync function query(page = 1) {\r\n    try {\r\n        const { data } = await axios.get(BASE_URL + page)\r\n        PAGES_COUNT = data.info.pages\r\n        return data.results;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\n//Query for development for non-blocking api\r\n\r\n// async function query() {\r\n//     PAGES_COUNT = gDatabase.info.pages\r\n//     return new Promise((resolve, reject) => {\r\n//         setTimeout(() => {\r\n//             resolve(gDatabase.results);\r\n//         }, 1000);\r\n//     });\r\n// }\r\n\r\nexport const databaseService = {\r\n    query,\r\n    getPageCount,\r\n    fetchEpisodes,\r\n}\r\n","import { useContext } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core'\r\nimport { Context } from '../App';\r\n// import { Button } from '@material-ui/core'\r\n\r\nexport const AppHeader = ({ toggleView, view }) => {\r\n    const label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n    const value = useContext(Context);\r\n\r\n    return (\r\n        <header className=\"app-header flex align-center  main-layout space-between\">\r\n            <NavLink to='/'>\r\n                <h1>Rick and Morty Characters App</h1>\r\n            </NavLink>\r\n            <div className=\"flex align-center gap\">\r\n                <FormControl style={{ width: '100px' }} >\r\n                    <InputLabel style={{ color: 'white' }} id=\"gender\">View</InputLabel>\r\n                    <Select\r\n                        MenuProps={{\r\n                            getContentAnchorEl: null,\r\n                            anchorOrigin: {\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"left\"\r\n                            }\r\n                        }}\r\n\r\n                        labelId=\"gedner\"\r\n                        id=\"demo-simple-select\"\r\n                        name=\"gender\"\r\n                        value={view || ''}\r\n                        variant=\"outlined\"\r\n                        label=\"Gender\"\r\n                        onChange={(ev) => { toggleView(ev) }}\r\n                    >\r\n                        <MenuItem value={'table'}>Table</MenuItem>\r\n                        <MenuItem value={'cards'}>Cards</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <NavLink to='/charts'>Charts</NavLink>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","function debounce(func, wait, immediate) {\r\n    var timeout;\r\n    return function () {\r\n        const context = this, args = arguments,\r\n            later = function () {\r\n                timeout = null;\r\n                if (!immediate) func.apply(context, args);\r\n            };\r\n        const callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) func.apply(context, args);\r\n    };\r\n};\r\n\r\nexport const utilService = {\r\n    debounce\r\n}","import { useCallback, useEffect, useState } from 'react'\r\nimport {\r\n    FormControl,\r\n    IconButton,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField\r\n} from '@material-ui/core'\r\nimport { utilService } from '../services/utils'\r\n\r\nexport const AppFilter = ({ onSetFilter, filterBy, clearFilter }) => {\r\n    const [name, setName] = useState('')\r\n    const handleChange = ({ target }) => {\r\n        setName(target.value)\r\n    }\r\n\r\n    const debouncedSetFilter = useCallback(utilService.debounce(onSetFilter, 300), []);\r\n\r\n    useEffect(() => {\r\n        debouncedSetFilter({ target: { name: 'name', value: name } })\r\n    }, [name])\r\n\r\n    return (\r\n        <section className=\"app-filter flex  column gap\">\r\n            <div className=\"search-filter flex align-center\">\r\n                <TextField\r\n                    id=\"field-basic\"\r\n                    label=\"Search\"\r\n                    variant=\"outlined\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    style={{\r\n                        backgroundColor: \"transparent\",\r\n                        color: \"#333333\",\r\n                        borderRadius: 5,\r\n                        width: \"100%\"\r\n                    }}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n            </div>\r\n            <div className=\"search-selections flex align-center gap\">\r\n\r\n                <FormControl fullWidth >\r\n                    <InputLabel id=\"gender\">Gender</InputLabel>\r\n                    <Select\r\n                        MenuProps={{\r\n                            getContentAnchorEl: null,\r\n                            anchorOrigin: {\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"left\"\r\n                            }\r\n                        }}\r\n                        labelId=\"gedner\"\r\n                        id=\"demo-simple-select\"\r\n                        name=\"gender\"\r\n                        value={filterBy.gender}\r\n                        variant=\"outlined\"\r\n                        label=\"Gender\"\r\n                        onChange={onSetFilter}\r\n                    >\r\n                        <MenuItem value={'Male'}>Male</MenuItem>\r\n                        <MenuItem value={'Female'}>Female</MenuItem>\r\n                        <MenuItem value={'unknown'}>Unknown</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                    <InputLabel id=\"status\">Status</InputLabel>\r\n                    <Select\r\n                        MenuProps={{\r\n                            getContentAnchorEl: null,\r\n                            anchorOrigin: {\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"left\"\r\n                            }\r\n                        }}\r\n                        labelId=\"status\"\r\n                        id=\"demo-simple-select\"\r\n                        name=\"status\"\r\n                        value={filterBy.status}\r\n                        label=\"Status\"\r\n                        variant=\"outlined\"\r\n                        onChange={onSetFilter}\r\n                    >\r\n                        <MenuItem value={'Alive'}>Alive</MenuItem>\r\n                        <MenuItem value={'Dead'}>Dead</MenuItem>\r\n                        <MenuItem value={'unknown'}>Unknown</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <IconButton\r\n                    className=\"icon-clear\"\r\n                    onClick={() => {\r\n                        setName('')\r\n                        clearFilter()\r\n                    }}\r\n                    name=\"clear\"\r\n                    style={{\r\n                        color: '#fefefe',\r\n                        backgroundColor: \"#176cc0\",\r\n                        borderRadius: '5px',\r\n                        padding: \"1rem\",\r\n                        fontSize: \"1.2rem\",\r\n                        textTransform: \"uppercase\"\r\n                    }}\r\n                    aria-label=\"clear search\"\r\n                    component=\"span\">\r\n                    Clear All\r\n                </IconButton>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}","import { useContext, useMemo } from \"react\";\r\nimport { Context } from \"../../App\";\r\n\r\nexport const CharacterPreview = ({ character, onToggleModal, onSelectedCharcter }) => {\r\n    const { name, origin, status, species, gender, image, episode } = character\r\n\r\n    const view = useContext(Context);\r\n\r\n\r\n    const getSelectedCharcter = useMemo(() => {\r\n        const [first] = episode\r\n        const last = episode[episode.length - 1]\r\n        return {\r\n            first,\r\n            last,\r\n            image,\r\n            name\r\n        }\r\n\r\n    }, [character]);\r\n\r\n    return (\r\n        <section className={`character-preview  ${view ? 'cards' : ''}`}\r\n            onClick={() => {\r\n                onSelectedCharcter(getSelectedCharcter)\r\n            }}>\r\n            <div className=\"character-img\">\r\n                <img src={image} alt={name} />\r\n            </div>\r\n            <span className=\"name\">{name}</span>\r\n            <span className=\"origin\">{origin.name}</span>\r\n            <span className=\"status\">{status}</span>\r\n            <span className=\"species\">{species}</span>\r\n            <span className=\"gender\">{gender}</span>\r\n        </section >\r\n    )\r\n}","import { memo, useContext } from 'react';\r\nimport { Context } from '../../App';\r\nimport { CharacterPreview } from './CharacterPreview';\r\n\r\nexport const CharacterList = memo(function _CharacterList({\r\n    characters,\r\n    onToggleModal,\r\n    onSelectedCharcter }) {\r\n    const view = useContext(Context);\r\n\r\n    return (\r\n        <section className={`character-list  ${view ? 'cards' : ''}`}>\r\n            {!view && <div className=\"character-list-head   align-center\">\r\n                <div>&nbsp;</div>\r\n                <span>name</span>\r\n                <span>origin</span>\r\n                <span>status</span>\r\n                <span>species</span>\r\n                <span>gender</span>\r\n            </div>\r\n            }\r\n            {characters?.map(character => (\r\n                <CharacterPreview key={character.id}\r\n                    character={character} onToggleModal={onToggleModal} onSelectedCharcter={onSelectedCharcter} />\r\n            ))}\r\n        </section>\r\n    )\r\n})","import { useEffect, useState } from \"react\";\r\nimport { Box, Modal } from \"@material-ui/core\";\r\nimport { databaseService } from \"../services/database.service\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 500,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n};\r\n\r\nexport const BasicModal = ({\r\n    onSelectedCharcter,\r\n    selectedCharcter }) => {\r\n\r\n    const [episodes, setEpisodes] = useState([])\r\n\r\n    const getEpisodes = async (firstUrl, lastUrl) => {\r\n        const episodes = await databaseService.fetchEpisodes(firstUrl, lastUrl)\r\n        setEpisodes(episodes)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedCharcter) {\r\n            getEpisodes(selectedCharcter?.first, selectedCharcter?.last)\r\n        }\r\n    }, [selectedCharcter])\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={!!selectedCharcter}\r\n                onClose={() => { onSelectedCharcter(null) }}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\">\r\n                <Box sx={style}>\r\n                    <section className=\"modal-data flex column   gap\">\r\n                        <img src={selectedCharcter?.image} alt={selectedCharcter?.name} />\r\n                        <h2>{selectedCharcter?.name}</h2>\r\n                        {episodes.length > 0 && <>\r\n                            <span>First Episode: {episodes[0]}</span>\r\n                            <span>Last Episode: {episodes[1]}</span>\r\n                        </>}\r\n                    </section>\r\n                </Box>\r\n            </Modal>\r\n        </div >\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/puff.3b5c50a5.svg\";","import LoaderImg from '../assets/img/puff.svg'\r\n\r\n\r\nexport const Loader = () => {\r\n    return <div className=\"loader\">\r\n        <img src={LoaderImg} alt=\"Loading..\" />\r\n    </div>\r\n}","import { AppBoard } from './cmps/AppBoard';\r\nimport { ChartList } from './pages/ChartList';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: AppBoard,\r\n    },\r\n    {\r\n        path: '/charts',\r\n        component: ChartList,\r\n    },\r\n]\r\n\r\nexport default routes;","import { useCallback, useEffect, useMemo, useState } from \"react\"\r\nimport { Pagination } from \"@material-ui/lab\"\r\nimport { databaseService } from \"../services/database.service\"\r\nimport { utilService } from \"../services/utils\"\r\nimport { AppFilter } from \"./AppFilter\"\r\nimport { CharacterList } from \"./character-cmps/CharacterList\"\r\nimport { BasicModal } from \"./Modal\"\r\nimport { Loader } from \"./Loader\"\r\n\r\nexport const AppBoard = ({ view }) => {\r\n    const [characters, setCharcters] = useState(null)\r\n    const [selectedCharcter, setSelectedCharcter] = useState(null)\r\n    const [page, setPage] = useState(1)\r\n    const [filterBy, setFilterBy] = useState({\r\n        name: '',\r\n        gender: '',\r\n        status: ''\r\n    })\r\n\r\n    const onSelectedCharcter = (selectedCharcter) => {\r\n        setSelectedCharcter(selectedCharcter)\r\n    }\r\n\r\n    const onSetFilter = ({ target }) => {\r\n        const { name, value } = target\r\n        setFilterBy(prevFilter => ({ ...prevFilter, [name]: value }))\r\n    }\r\n\r\n    const clearFilter = () => {\r\n        const filter = {\r\n            name: '',\r\n            gender: '',\r\n            status: ''\r\n        }\r\n        setFilterBy(filter)\r\n    }\r\n\r\n    const onSetPage = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const charactersToDisaply = useMemo(() => {\r\n        if (characters?.length) {\r\n            let charsToShow = [...characters];\r\n            if (filterBy.name) {\r\n                const regex = new RegExp(filterBy.name, 'i');\r\n                charsToShow = charsToShow.filter(character => regex.test(character.name))\r\n            }\r\n            if (filterBy.gender) {\r\n                charsToShow = charsToShow.filter(character => character.gender === filterBy.gender)\r\n            }\r\n            if (filterBy.status) {\r\n                charsToShow = charsToShow.filter(character => character.status === filterBy.status)\r\n            }\r\n            return charsToShow\r\n        }\r\n    }, [filterBy, characters])\r\n\r\n    const loadCharacters = async (page) => {\r\n        const characters = await databaseService.query(page)\r\n        setCharcters(characters)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCharacters(page)\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        loadCharacters(view)\r\n    }, [view])\r\n\r\n\r\n\r\n    if (!characters?.length) return <Loader />\r\n    return (\r\n        <section className=\"app-board flex column gap\">\r\n\r\n            <AppFilter\r\n                onSetFilter={onSetFilter}\r\n                clearFilter={clearFilter}\r\n                filterBy={filterBy} />\r\n            {\r\n                charactersToDisaply?.length > 0 ?\r\n                    <>\r\n                        <CharacterList\r\n                            characters={charactersToDisaply}\r\n                            onSelectedCharcter={onSelectedCharcter} />\r\n                        <Pagination\r\n                            count={databaseService.getPageCount()}\r\n                            page={page}\r\n                            onChange={onSetPage} />\r\n\r\n                    </>\r\n                    : <h1 style={{ textAlign: 'center' }}>No Characters found!</h1>\r\n            }\r\n\r\n            <BasicModal\r\n                onSelectedCharcter={onSelectedCharcter}\r\n                selectedCharcter={selectedCharcter} />\r\n        </section>\r\n    )\r\n}","import { useEffect } from \"react\"\r\n\r\nexport const ChartList = ({ }) => {\r\n   \r\n\r\n    return (\r\n        <section className=\"chart-list flex column \">\r\n            <h1>Charts List</h1>\r\n        </section>\r\n    )\r\n}","import { createContext, useState } from 'react';\r\nimport { Switch, Route } from 'react-router'\r\nimport { AppHeader } from './cmps/AppHeader';\r\nimport routes from './routes.js'\r\n\r\nexport const Context = createContext(\"value\");\r\n\r\nexport function App() {\r\n  const [view, setView] = useState(null)\r\n  const toggleView = ({ target }) => {\r\n    setView(target.value === 'cards' ? 'cards' : null)\r\n  }\r\n\r\n  return (\r\n    <section className=\"app flex column gap\">\r\n      <Context.Provider value={view}>\r\n        <AppHeader toggleView={toggleView} />\r\n        <main className=\"main-layout\">\r\n          <Switch>\r\n            {routes.map(route => <Route key={route.path} exact component={route.component}\r\n              path={route.path} />)}\r\n          </Switch>\r\n\r\n        </main>\r\n      </Context.Provider>\r\n    </section >\r\n  )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { App } from './App.jsx';\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n        <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}